{"ast":null,"code":"var _jsxFileName = \"/Users/tristancharrin/Documents/GitHub/projet_5/src/Components/Carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport chevronGauche from \"../Assets/ChevronGauche.png\";\nimport chevronDroit from \"../Assets/ChevronDroit.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carousel(_ref) {\n  _s();\n  let {\n    pictures\n  } = _ref;\n  //reçois un tableau avec les URL des images\n\n  const [index, setIndex] = useState(0); // variable de compteur, défini au départ sur 0\n  const totalPictures = pictures.length - 1; // nombre max d'images\n\n  if (index < 0) setIndex(totalPictures); // si inférieur à zéro, défini le nombre d'images max\n  if (index > totalPictures) setIndex(0); // si supérieur au max d'images, alors met à zéro\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pictures[index],\n        className: \"classImage\",\n        alt: \"photo \" + index\n      }, \"car-\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), totalPictures > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIndex(index - 1),\n        children: [index, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chevronGauche,\n          className: \"classChevronGauche\",\n          alt: 'flèche gauche pour changer de photo ' + index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIndex(index + 1),\n        children: [index, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chevronDroit,\n          className: \"classChevronDroit\",\n          alt: 'flèche droite pour changer de photo ' + index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), totalPictures > 0 &&\n    /*#__PURE__*/\n    // compteur d'images qui ne s'affiche qu'en version Desktop et lorsqu'il y a plusieurs images\n    _jsxDEV(\"div\", {\n      className: \"div-compteur\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"compteurImages\",\n        children: [index + 1, \"/\", totalPictures + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Carousel, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","chevronGauche","chevronDroit","jsxDEV","_jsxDEV","Carousel","_ref","_s","pictures","index","setIndex","totalPictures","length","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tristancharrin/Documents/GitHub/projet_5/src/Components/Carousel.jsx"],"sourcesContent":["\nimport React, { useState } from 'react'\nimport chevronGauche from \"../Assets/ChevronGauche.png\"\nimport chevronDroit from \"../Assets/ChevronDroit.png\"\n\n\n\nfunction Carousel({pictures}) { //reçois un tableau avec les URL des images\n\n    const [index, setIndex] = useState(0)  // variable de compteur, défini au départ sur 0\n    const totalPictures = pictures.length-1 // nombre max d'images\n\n    if (index < 0) setIndex(totalPictures)  // si inférieur à zéro, défini le nombre d'images max\n    if (index > totalPictures) setIndex(0)  // si supérieur au max d'images, alors met à zéro\n    \n    return(\n        <div className='carousel'>\n\n            {/* affiche la première image */}\n            <div className='div-image'>  \n                <img src={pictures[index]} className=\"classImage\" key={\"car-\"+index} alt={\"photo \"+index} />\n            </div>\n\n            {/* si plus d'une image, alors ce code sera exécuté */}\n            {totalPictures > 0 && ( \n                <div> {/* les boutons pour les chevrons droit et gauche, servent pour naviguer au sein du Carousel */}\n                    <button onClick={() => setIndex(index - 1)}>{index}\n                        <img src={chevronGauche} className='classChevronGauche' alt={'flèche gauche pour changer de photo '+index} />\n                    </button>\n                    <button onClick={() => setIndex(index + 1)}>{index}\n                        <img src={chevronDroit} className='classChevronDroit' alt={'flèche droite pour changer de photo '+index} />\n                    </button>\n                </div>\n            )}\n            {totalPictures > 0 && (\n                // compteur d'images qui ne s'affiche qu'en version Desktop et lorsqu'il y a plusieurs images\n                <div className='div-compteur'> \n                    <p className='compteurImages'>\n                        {index+1}/{totalPictures+1}\n                    </p>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Carousel"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}